<?php

namespace App\Http\Controllers;

use App\Models\Theater;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class TheaterController extends Controller
{
    // üìã Danh s√°ch r·∫°p (Client v√† Admin)
    public function index(Request $request)
{
    // L·∫•y t·ª´ kh√≥a t√¨m ki·∫øm (n·∫øu c√≥)
    $search = $request->input('search');

    // Query c∆° b·∫£n
    $query = Theater::query();

    // N·∫øu c√≥ t·ª´ kh√≥a ‚Üí l·ªçc theo t√™n ho·∫∑c ƒë·ªãa ch·ªâ
    if (!empty($search)) {
        $query->where(function($q) use ($search) {
            $q->where('name', 'like', "%{$search}%")
              ->orWhere('address', 'like', "%{$search}%");
        });
    }

    // Ph√¢n trang + gi·ªØ t·ª´ kh√≥a khi chuy·ªÉn trang
    $theaters = $query->latest()->paginate(10)->appends(['search' => $search]);

    // Tr·∫£ v·ªÅ view (chung cho admin v√† user)
    return view('theaters.index', compact('theaters', 'search'));
}


    // üëÅÔ∏è Chi ti·∫øt r·∫°p
    public function show(Theater $theater)
    {
        return view('theaters.show', compact('theater'));
    }

    // ‚ûï Form th√™m r·∫°p (Admin)
    public function create()
    {
        $this->authorizeAdmin();
        return view('theaters.create');
    }

    // üíæ L∆∞u r·∫°p m·ªõi (Admin)
    public function store(Request $request)
    {
        $this->authorizeAdmin();

        $request->validate([
            'name' => 'required|string|max:255',
            'address' => 'required|string|max:500',
            'total_rooms' => 'nullable|integer|min:0',
        ]);

        Theater::create([
            'name' => $request->name,
            'address' => $request->address,     // ‚úÖ Gi·ªØ nguy√™n
            'total_rooms' => $request->total_rooms ?? 0,  // ‚úÖ N·∫øu null ‚Üí g√°n 0
        ]);

        return redirect()->route('admin.theaters.index')
                         ->with('success', 'üé¨ Th√™m r·∫°p th√†nh c√¥ng!');
    }

    // ‚úèÔ∏è Form s·ª≠a r·∫°p (Admin)
    public function edit(Theater $theater)
    {
        $this->authorizeAdmin();
        return view('theaters.edit', compact('theater'));
    }

    // üîÑ C·∫≠p nh·∫≠t (Admin)
    public function update(Request $request, Theater $theater)
    {
        $this->authorizeAdmin();

        $request->validate([
            'name' => 'required|string|max:255',
            'address' => 'required|string|max:500',
            'total_rooms' => 'nullable|integer|min:0',
        ]);

        $theater->update([
            'name' => $request->name,
            'address' => $request->address,     // ‚úÖ Ch√≠nh x√°c
            'total_rooms' => $request->total_rooms ?? 0, // ‚úÖ N·∫øu tr·ªëng ‚Üí gi·ªØ 0
        ]);

        return redirect()->route('admin.theaters.index')
                         ->with('success', '‚úÖ C·∫≠p nh·∫≠t r·∫°p th√†nh c√¥ng!');
    }

    // üóëÔ∏è X√≥a (Admin)
    public function destroy(Theater $theater)
    {
        $this->authorizeAdmin();

        $theater->delete();
        return redirect()->route('admin.theaters.index')
                         ->with('success', 'üóëÔ∏è X√≥a r·∫°p th√†nh c√¥ng!');
    }

    // üîí Ki·ªÉm tra quy·ªÅn admin
    private function authorizeAdmin()
    {
        if (!Auth::check() || Auth::user()->role !== 'admin') {
            abort(403, 'B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p ch·ª©c nƒÉng n√†y.');
        }
    }
}
