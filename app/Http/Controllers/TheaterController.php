<?php

namespace App\Http\Controllers;

use App\Models\Theater;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class TheaterController extends Controller
{
    // üìã Danh s√°ch r·∫°p (Client v√† Admin)
    public function index()
    {
        $theaters = Theater::latest()->paginate(10);

        // N·∫øu l√† admin ‚Üí hi·ªÉn th·ªã view qu·∫£n tr·ªã
        if (Auth::check() && Auth::user()->role === 'admin') {
            return view('theaters.index', compact('theaters'));
        }

        // N·∫øu l√† kh√°ch ho·∫∑c ng∆∞·ªùi d√πng ‚Üí v·∫´n d√πng c√πng view, nh∆∞ng ·∫©n n√∫t CRUD
        return view('theaters.index', compact('theaters'));
    }

    // üëÅÔ∏è Chi ti·∫øt r·∫°p
    public function show(Theater $theater)
    {
        return view('theaters.show', compact('theater'));
    }

    // ‚ûï Form th√™m r·∫°p (Admin)
    public function create()
    {
        $this->authorizeAdmin();
        return view('theaters.create');
    }

    // üíæ L∆∞u r·∫°p m·ªõi (Admin)
    public function store(Request $request)
    {
        $this->authorizeAdmin();

        $request->validate([
            'name' => 'required|string|max:255',
            'address' => 'required|string|max:500',
            'total_rooms' => 'nullable|integer|min:0',
        ]);

        Theater::create([
            'name' => $request->name,
            'address' => $request->address,     // ‚úÖ Gi·ªØ nguy√™n
            'total_rooms' => $request->total_rooms ?? 0,  // ‚úÖ N·∫øu null ‚Üí g√°n 0
        ]);

        return redirect()->route('admin.theaters.index')
                         ->with('success', 'üé¨ Th√™m r·∫°p th√†nh c√¥ng!');
    }

    // ‚úèÔ∏è Form s·ª≠a r·∫°p (Admin)
    public function edit(Theater $theater)
    {
        $this->authorizeAdmin();
        return view('theaters.edit', compact('theater'));
    }

    // üîÑ C·∫≠p nh·∫≠t (Admin)
    public function update(Request $request, Theater $theater)
    {
        $this->authorizeAdmin();

        $request->validate([
            'name' => 'required|string|max:255',
            'address' => 'required|string|max:500',
            'total_rooms' => 'nullable|integer|min:0',
        ]);

        $theater->update([
            'name' => $request->name,
            'address' => $request->address,     // ‚úÖ Ch√≠nh x√°c
            'total_rooms' => $request->total_rooms ?? 0, // ‚úÖ N·∫øu tr·ªëng ‚Üí gi·ªØ 0
        ]);

        return redirect()->route('admin.theaters.index')
                         ->with('success', '‚úÖ C·∫≠p nh·∫≠t r·∫°p th√†nh c√¥ng!');
    }

    // üóëÔ∏è X√≥a (Admin)
    public function destroy(Theater $theater)
    {
        $this->authorizeAdmin();

        $theater->delete();
        return redirect()->route('admin.theaters.index')
                         ->with('success', 'üóëÔ∏è X√≥a r·∫°p th√†nh c√¥ng!');
    }

    // üîí Ki·ªÉm tra quy·ªÅn admin
    private function authorizeAdmin()
    {
        if (!Auth::check() || Auth::user()->role !== 'admin') {
            abort(403, 'B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p ch·ª©c nƒÉng n√†y.');
        }
    }
}
